@page "/login"

@rendermode InteractiveServer

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject UserNameService UserNameService

@using Microsoft.AspNetCore.Mvc
@using NuGet.Protocol
@using SimpleChat.Models
@using SimpleChat.Services
@using System.Net


<PageTitle>Login</PageTitle>

<div class="h-screen flex justify-center items-center">
    <EditForm Model=@User OnValidSubmit="LoginUser" class="flex flex-col space-y-4">
        <AntiforgeryToken />

        <DataAnnotationsValidator />

        <div>
            <InputText @bind-Value=@User.UserName type="text" placeholder="Username"
                class="max-w-200 max-h-10 p-px border-2 rounded-lg mb-2" />
            <ValidationMessage For="@(() => User!.UserName)" />
        </div>
        <div>
            <InputText class="max-w-200 max-h-10 p-px border-2 rounded-lg mb-2" @bind-Value=@User.Password
                type="password" placeholder="Password" />
            <ValidationMessage For="@(() => User.Password)" />
        </div>

        <div class="max-w-200">
            <button class="btn btn-primary mt-2 font-bold" type="submit">Register
            </button>
        </div>

    </EditForm>

    @if (errorMessage)
    {
        <div class="mt-2 w-50">
            <p class="alert alert-danger "><span class="font-bold">Username / Password are wrong.</span></p>
        </div>
    }

</div>




@code {
    private User User = new();

    private bool errorMessage = false;

    private async Task LoginUser()
    {
        LoginRequest request = new(User.UserName, User.Password);

        var response = await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri + "api/v1/user/login", request);


        if (response.IsSuccessStatusCode)
        {
            UserNameService.UserName = User.UserName;
            NavigationManager.NavigateTo("/chat");
        }

        if (!response.IsSuccessStatusCode)
        {
            errorMessage = true;
        }
    }
}

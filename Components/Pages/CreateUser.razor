@using SimpleChat.Services
@using SimpleChat.Models
@using System.Net

@rendermode InteractiveServer

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject UserNameService UserNameService

@page "/register"

<PageTitle>Register</PageTitle>

<EditForm Model=@User OnValidSubmit="NewUser">
    <AntiforgeryToken />

    <DataAnnotationsValidator />

    <div>
        @if (!String.IsNullOrWhiteSpace(errorMessage))
        {
            <div class="mt-2">
                <p class="alert alert-danger"><span class="font-medium">@errorMessage</span></p>
            </div>
        }
        <InputText @bind-Value=@User.UserName type="text" placeholder="Username"
            class="max-w-200 max-h-10 p-px border-2 rounded-lg mb-2" />
        <ValidationMessage For="@(() => User!.UserName)" />
    </div>
    <div>
        <InputText class="max-w-200 max-h-10 p-px border-2 rounded-lg mb-2" @bind-Value=@User.Password type="password"
            placeholder="Password" />
        <ValidationMessage For="@(() => User.Password)" />
    </div>

    <div class="max-w-200 items-center">
        <button class="btn btn-primary mt-2" type="submit">Register
        </button>
    </div>

</EditForm>





@code {
    private User User = new User();
    private string errorMessage = string.Empty;
    private async Task NewUser()
    {

        if (User is not null)
        {
            var post = await HttpClient.PostAsJsonAsync<User>(NavigationManager.BaseUri + "api/v1/user", User);

            if (post.IsSuccessStatusCode)
            {
                UserNameService.UserName = User.UserName;
                NavigationManager.NavigateTo("/chat");
            }
            else if (post.StatusCode == HttpStatusCode.Conflict)
            {
                ErrorResponse errorResponse = await post.Content.ReadFromJsonAsync<ErrorResponse>();
                errorMessage = errorResponse.Message;
            }
        }
    }

    public class ErrorResponse
    {
        public int Code { get; set; }
        public string Message { get; set; } = string.Empty;
    }
}